/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mx.itson.benito.presentacion;

import java.awt.BorderLayout;
import java.awt.Color;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import mx.itson.benito.entidades.Articulo;
import mx.itson.benito.entidades.Proveedor;
import mx.itson.benito.persistencia.ProveedorDAO;
import mx.itson.benito.utilerias.HibernateUtil;
import org.hibernate.Session;
import org.hibernate.query.Query;

/**
 *
 * @author ovalo
 */
public class ProveedorListado extends javax.swing.JFrame {

    /**
     * Creates new form ProveedorListado
     */
    DefaultTableModel modelo = new DefaultTableModel();
    int id = 0;

    public ProveedorListado() {
        getContentPane().setBackground(Color.DARK_GRAY);
        initComponents();
        this.setLocationRelativeTo(null);
        this.id = id;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbProveedor = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tbProveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Clave", "Nombre", "Dirección", "Telefono", "Email", "Persona de contacto"
            }
        ));
        tbProveedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbProveedorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbProveedor);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 204));
        jLabel1.setText("Proveedores");

        btnGuardar.setText("Agregar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 30, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(244, 244, 244)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        tbProveedor.getColumnModel().getColumn(0).setMaxWidth(0);
        tbProveedor.getColumnModel().getColumn(0).setMinWidth(0);
        tbProveedor.getColumnModel().getColumn(0).setPreferredWidth(0);

        List<Proveedor> proveedores = ProveedorDAO.obtenerTodos();
        modelo = (DefaultTableModel) tbProveedor.getModel();
        modelo.setRowCount(0);

        for (Proveedor p : proveedores) {
            modelo.addRow(new Object[]{
                p.getId(),
                p.getClave(),
                p.getNombre(),
                p.getDireccion(),
                p.getTelefono(),
                p.getEmail(),
                p.getPersonaContacto()
            });
        }

    }//GEN-LAST:event_formWindowOpened

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_formMouseClicked
    private void abrirVentanaArticulos(int idProveedor) {

        Session sesion = HibernateUtil.getSessionFactory().openSession();

        Query consulta = sesion.createQuery("FROM Articulo a WHERE a.proveedor.id = :idProveedor");
        consulta.setParameter("idProveedor", idProveedor);
        List<Articulo> articulos = consulta.list();

        JFrame ventanaArticulos = new JFrame("Artículos del proveedor");
        JTable tablaArticulos = new JTable();
        this.setLocationRelativeTo(null);
        DefaultTableModel modeloTabla = new DefaultTableModel();
        modeloTabla.addColumn("Clave");
        modeloTabla.addColumn("Nombre");
        modeloTabla.addColumn("Precio");


        for (Articulo articulo : articulos) {
            Object[] fila = new Object[3];
            fila[0] = articulo.getClave();
            fila[1] = articulo.getNombre();
            fila[2] = articulo.getPrecio();
            modeloTabla.addRow(fila);

        }

        tablaArticulos.setModel(modeloTabla);
        ventanaArticulos.add(new JScrollPane(tablaArticulos));
        ventanaArticulos.pack();
        ventanaArticulos.setVisible(true);

        // Cierra la sesión de Hibernate
        sesion.close();
    }

    private void tbProveedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbProveedorMouseClicked
        // TODO add your handling code here:
        int filaSeleccionada = tbProveedor.getSelectedRow();
        int idProveedor = Integer.parseInt(tbProveedor.getValueAt(filaSeleccionada, 0).toString());
        abrirVentanaArticulos(idProveedor);

    }//GEN-LAST:event_tbProveedorMouseClicked

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        ProveedorForm pf = new ProveedorForm(this, true, 0);
        pf.setVisible(true);
        hide();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        int filaseleccionada = tbProveedor.getSelectedRow();

        if (filaseleccionada == -1) {

            JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fila");

        } else {
            int id = Integer.parseInt(String.valueOf(modelo.getValueAt(tbProveedor.getSelectedRow(), 0)));

            ProveedorForm pf = new ProveedorForm(this, true, id);
            pf.setVisible(true);
            hide();

        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:

        if (JOptionPane.showConfirmDialog(this, "Seguro que quieres eliminar?", "Seleccione una opcion", JOptionPane.YES_NO_OPTION) == 0) {
            int filaseleccionada = tbProveedor.getSelectedRow();
            String id = tbProveedor.getModel().getValueAt(filaseleccionada, 0).toString();
            new ProveedorDAO().eliminar(Integer.parseInt(id));
            cargar("");
        } else {
            cargar("");
        }

    }//GEN-LAST:event_btnEliminarActionPerformed
    public void cargar(String filtro) {
        ProveedorDAO proveedor = new ProveedorDAO();
        List<Proveedor> proveedores = proveedor.obtenerTodos();

        DefaultTableModel modeloTabla = (DefaultTableModel) tbProveedor.getModel();
        modeloTabla.setRowCount(0);

        for (Proveedor p : proveedores) {
            modeloTabla.addRow(new Object[]{p.getId(), p.getClave(),
                p.getNombre(), p.getDireccion(), p.getTelefono(), p.getEmail(), p.getPersonaContacto()
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProveedorListado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProveedorListado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProveedorListado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProveedorListado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProveedorListado().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbProveedor;
    // End of variables declaration//GEN-END:variables
}
